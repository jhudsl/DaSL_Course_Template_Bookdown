name: Periodic URL Check

on:
  pull_request:
  schedule:
    - cron: '*/2 * * * *'

jobs:
  set-up:
    name: Load user automation choices
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

        # Use the yaml-env-action action.
      - name: Load environment from YAML
        uses: doughepi/yaml-env-action@v1.0.0
        with:
            files: config_automation.yml # Pass a space-separated list of configuration files. Rightmost files take precedence.

      # Delete the branch if this has been run before
      - name: Delete branch locally and remotely
        run: git push origin --delete preview-${{ github.event.pull_request.number }} || echo "No branch to delete"

      # Make the branch fresh
      - name: Make the branch fresh
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git config --global user.email "itcrtrainingnetwork@gmail.com"
          git config --global user.name "jhudsl-robot"

          branch_name='preview-${{ github.event.pull_request.number }}'
          echo branch doesnt exist
          git checkout -b $branch_name || echo branch exists
          git push --set-upstream origin $branch_name || echo echo branch exists remotely
        shell: bash

    outputs:
      toggle_url_check_periodically: "${{ env.URL_CHECK_PERIODICALLY }}"

  url-check:
    name: Check URLs
    needs: set-up
    if: ${{needs.set-up.outputs.toggle_url_check_periodically == 'yes'}}
    runs-on: ubuntu-latest
    container:
      image: jhudsl/base_ottr:main

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Run the check
      uses: jhudsl/ottr-reports@main
      id: check_results
      continue-on-error: true
      with:
        check_type: urls
        error_min: 1

    - name: Declare file path and time
      id: check-report
      run: |
        branch_name='preview-${{ github.event.pull_request.number }}'
        echo "time=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
        echo "error_url=https://github.com/${GITHUB_REPOSITORY}/blob/$branch_name/${{ steps.check_results.outputs.report_path }}" >> $GITHUB_OUTPUT
        error_num=$(cat ${{ steps.check_results.outputs.report_path }} | wc -l)
        error_num="$((error_num-1))"
        echo "error_num=$error_num" >> $GITHUB_OUTPUT
        error_list=$(cat ${{ steps.check_results.outputs.report_path }})
        echo "error_list=$error_list" >> $GITHUB_OUTPUT
      shell: bash

    - name: If too many URL errors, then make an issue
      if: ${{ steps.check-report.outputs.error_num <= 1 }}
      uses: JasonEtco/create-an-issue@v2
      with:
        filename: .github/ISSUE_TEMPLATE/url-error.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ERROR_LIST: ${{ steps.check_results.outputs.error_list }}
        ERROR_NUM: ${{ steps.check-report.outputs.error_num }}

    - name: Stop if failure
      if: steps.check_results.outcome == 'failure'
      run: exit 1

    - name: If no URL errors than delete the branch we made
      if: ${{ steps.check-report.outputs.error_num <= 1 }}
      run: git push origin --delete preview-${{ github.event.pull_request.number }} || echo "No branch to delete"
